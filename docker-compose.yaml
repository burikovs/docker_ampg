version: '3.8'

services:
  basic:
    image: nginx:latest
    depends_on:
      - php
    volumes:
      - $DOCKER_ROOT/nginx/basic/default.conf:/etc/nginx/conf.d/default.conf
      - $DOCKER_ROOT/nginx/.htpasswd_common:/etc/nginx/.htpasswd
      - ./src/:/var/www/html/
    networks:
      - ${PROJECT_NAME}
    ports:
      - ${HTTP_LOCAL_PORT}:80

  php:
    build:
      context: $DOCKER_ROOT/php
    volumes:
      - ./src/:/var/www/html/
      - $DOCKER_ROOT/php/ini/10-opcache.ini:/usr/local/etc/php/conf.d/10-opcache.ini
      - $DOCKER_ROOT/php/ini/20-xdebug.ini:/usr/local/etc/php/conf.d/20-xdebug.ini
    extra_hosts:
      #Для Windows
      #- "host.docker.internal:host-gateway"
      #Для Linux $DOCKER_GATEWAY_HOST - см. документацию
      - host.docker.internal:$DOCKER_GATEWAY_HOST
    networks:
      - ${PROJECT_NAME}
    depends_on:
      - postgres

  php56:
    build:
      context: $DOCKER_ROOT/php56
    volumes:
      - ./src/:/var/www/html/
      - $DOCKER_ROOT/php56/ini/php.ini:/usr/local/etc/php/conf.d/php.ini
      - $DOCKER_ROOT/php56/ini/10-opcache.ini:/usr/local/etc/php/conf.d/10-opcache.ini
      - $DOCKER_ROOT/php56/ini/20-xdebug.ini:/usr/local/etc/php/conf.d/20-xdebug.ini
    extra_hosts:
      #Для Windows
      #- "host.docker.internal:host-gateway"
      #Для Linux $DOCKER_GATEWAY_HOST - см. документацию
      - host.docker.internal:$DOCKER_GATEWAY_HOST
    networks:
      - ${PROJECT_NAME}
    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DATABASE}
      PGDATA: /var/lib/postgresql/data/${PROJECT_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data/${PROJECT_NAME}:rw
      - $DOCKER_ROOT/database/postgres/conf/:/etc/postgresql/
      - $DOCKER_ROOT/database/postgres/dump/:/docker-entrypoint-initdb.d/
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - ${PROJECT_NAME}
    ports:
      - ${DATABASE_POSTGRES_HOST_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
      image: mysql:5.7
      restart: always
      environment:
        MYSQL_DATABASE: ${PROJECT_NAME}
        MYSQL_USER: 'user'
        MYSQL_PASSWORD: 'password'
        MYSQL_ROOT_PASSWORD: 'password'
      ports:
        - '3306:3306'
      expose:
        - '3306'
      volumes:
        - mysql-data:/var/lib/mysql
networks:
  apmg:
    driver: bridge
    name: ${PROJECT_NAME}

volumes:
  postgres-data:
  mysql-data:
